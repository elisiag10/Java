==================RentalDemo=================
import java.util.*;
import java.util.Scanner;
import java.util.*;
import java.util.Collections;

public class RentalDemo {

    public static void main(String[] args) {

        final int SIZE = 8;
        Rental[] rental = new Rental[SIZE];
        Scanner myObj = new Scanner(System.in);
        String contractNum;
        // CH9
        List<String> contractNumbLists = new ArrayList<>();
        List<Integer> equipTypeLists = new ArrayList<>();
        List<Integer> mintuesLists = new ArrayList<>();
        // CH10
        LessonWithRental[] LessonWithRental = new LessonWithRental[SIZE];
        List<Integer> typesOfEquipmentSort = new ArrayList<>();
        List<Integer> instructorSort = new ArrayList<>();
        List<Integer> lessons = new ArrayList<>();

        for (int i = 0; i < LessonWithRental.length; i++) {

            System.out.println("Enter contract number: ");
            contractNum = myObj.nextLine();
            contractNumbLists.add(contractNum);

            System.out.println("Enter number of minutes of rental: ");
            int rentalMins = Integer.parseInt(myObj.nextLine());
            mintuesLists.add(rentalMins);

            System.out.println("Enter number for rental equipment: ");
            int equipType = Integer.parseInt(myObj.nextLine());
            equipTypeLists.add(equipType);

            System.out.println("Enter phone number: ");
            String phoneNum = myObj.nextLine();

            System.out.println(new LessonWithRental().getInstructor());
            System.out.println("Select Instructor: ");
            int instructorChoice = Integer.parseInt(myObj.nextLine());
            instructorSort.add(instructorChoice);

            System.out.println("Select Equipment: ");
            int equipmentChoice = Integer.parseInt(myObj.nextLine());
            typesOfEquipmentSort.add(equipmentChoice);

            System.out.println("Need lessons? True or False ");
            int lessonsNeeded = Integer.parseInt(myObj.nextLine());
            lessons.add(lessonsNeeded);

            rental[i] = new Rental();
            LessonWithRental[i] = new LessonWithRental(contractNum, rentalMins,
                    equipmentChoice, lessonsNeeded);
            rental[i].setContractNumber(contractNum);
            rental[i].setEquipType(equipType);
            rental[i].setHoursAndMinutes(rentalMins);
            rental[i].getPhoneNumber(phoneNum);
            rental[i].displayDetails(contractNum);

        }

        sortHere(contractNumbLists, equipTypeLists, mintuesLists);
        printRental(rental, LessonWithRental);
        int userInput;
        while (true) {
            sortRental();
            userInput = myObj.nextInt();
            if (userInput == 100)
                break;
            else if (userInput == 1) {
                sortByContractNumber(rental, contractNumbLists);
                System.out.println("\nAfter sorting Rental List Based on Contract Number");
            } else if (userInput == 2) {
                sortByEquipNumber(rental, typesOfEquipmentSort);
                System.out.println("\nAfter sorting Rental List Based on Equipment");
            } else if (userInput == 3) {
                sortByInstruct(rental, instructorSort);
                System.out.println("\nAfter sorting Rental List Based on Instructor");
            }
        }

    }

    public static void printRental(Rental[] rental, LessonWithRental[] LessonWithRental) {

        for (int i = 0; i < rental.length; i++) {

            System.out.println("\nInformation for Event number #" + (i + 1));

            System.out.println("The Contract Number is: " + rental[i].getcontractNumber());

            System.out.println("The Event Type is : " + rental[i].getEquipType());

            System.out.println("Selected Entree : " + LessonWithRental[i].getInstructor());

        }
    }

    public static void sortHere(List<String> contractNumbLists, List<Integer> equipTypeLists,
            List<Integer> mintuesLists) {
        Scanner myObj = new Scanner(System.in);
        int i = 0;

        while (true) {
            System.out.print("\n" + "Enter type, 1:ContractNumb, 2:EquipType, 3:Minutes, 100 to exit" + "\n");
            int y = Integer.parseInt(myObj.nextLine());

            if (y == 1) {
                Collections.sort(contractNumbLists);
                System.out.print(contractNumbLists + "\n");

            } else if (y == 2) {
                Collections.sort(equipTypeLists);
                System.out.print(equipTypeLists + "\n");

            } else if (y == 3) {
                Collections.sort(mintuesLists);
                System.out.print(mintuesLists + "\n");

            } else if (y == 100) {
                System.out.print("exit" + "\n");
                break;
            } else {
                System.out.print("enter numbers or push 100" + "\n");

            }

        }
    }

    private static void sortRental() {

        System.out.println("\n1) To Sort List based on Event Number.");

        System.out.println("2) To Sort List based on Number Of Guest.");

        System.out.println("3) To Sort List based on Event Type.");

        System.out.println("100) To Exit.");

        System.out.print("Enter Your choice: ");

    }

    private static void sortByContractNumber(Rental[] rental, List<String> contractNumbLists) {
        for (int i = 0; i < rental.length; i++) {
            Collections.sort(contractNumbLists);

        }
        System.out.print(contractNumbLists);
    }

    private static void sortByEquipNumber(Rental[] rental, List<Integer> typesOfEquipmentSort) {
        for (int i = 0; i < rental.length; i++) {
            Collections.sort(typesOfEquipmentSort);

        }
        System.out.print(typesOfEquipmentSort);
    }

    private static void sortByInstruct(Rental[] rental, List<Integer> instructorSort) {
        for (int i = 0; i < rental.length; i++) {
            Collections.sort(instructorSort);

        }
        System.out.print(instructorSort);

    }

}

=================LessonWithRental===============

public class LessonWithRental extends Rental {

    boolean isRequired;
    final String[] instructorOptions = { "Gary", "Tina", "Kim", "Ted", "Lisa", "Ray", "Jim", "Nicole" };
    final String[] stores = { "Uptown", "Midtown", "Downtown", "Eastern", "Western", "Northern", "Southern", "none" };

    public LessonWithRental() {

    }

    public LessonWithRental(String contractNumber, int hoursRented, int equipType, int lessonsNeeded) {
        super.contractNumber = contractNumber;
        super.hoursRented = hoursRented;
        // super.typesOfEquips = equipType;
        lessonsNeeded = 1;
    }

    public String getInstructor() {

        String showInstructor = "<!--- Instructors ---!>\n";
        for (int i = 0; i < instructorOptions.length; i++) {
            showInstructor += ((i + 1) + ") " + instructorOptions[i] + "\n");
        }
        showInstructor = "<!--- Equipment ---!>\n";
        for (int i = 0; i < typesOfEquips.length; i++) {
            showInstructor += ((i + 1) + ") " + typesOfEquips[i] + "\n");
        }

        // Return instructor
        return showInstructor;
    }

}

=================Rental====================

import java.util.Arrays;
import java.util.Scanner;
import java.io.*;
import java.lang.*;
import java.util.*;
import java.util.ArrayList;

public class Rental {
    // Two public final static fields that hold the number of minutes in an hour and
    // the hourly rental rate
    final static int MINUTES_IN_AN_HOUR = 60;
    final int RENT_PER_HOUR = 40;
    final int ADDITIONAL_HOUR = 1;

    protected String contractNumber;
    protected int hoursRented;
    private int additionalMinutes;
    private int total;

    // Add a contact phone number field
    public static String phoneNumber = "";
    public static String phoneNumberFinal = "";
    public static String formattedPhoneNumber = "";

    // CH8 integer field that holds an event type
    int equipType;
    String typeOutput;

    // CH8 Final String array that holds names of the types of events
    public String[] typesOfEquips = { "personal", "watercraft", "pontoon boat", "rowboat", "canoe", "kayak",
            "beach", " chair", "umbrella", "other" };

    // Two public set methods

    // Four public get methods that return the values in the four nonstatic fields.
    public String getcontractNumber() {
        return this.contractNumber;
    }

    public int gethoursRented() {
        return hoursRented;
    }

    public int getAdditionalMinutes() {
        return additionalMinutes;
    }

    // ########CH8 get and set methods for the int event type####
    public int getEquipType() {
        return equipType;
    }

    public String setContractNumber(String x) {
        if (x.length() > 4) {
            x = "A000";
        } else if (x.length() == 4) {
            if (!Character.isAlphabetic(x.charAt(0)) || !Character.isDigit(x.charAt(1))
                    || !Character.isDigit(x.charAt(2)) || !Character.isDigit(x.charAt(3))) {
            }
        }
        return contractNumber = x;
    }

    public void setHoursAndMinutes(int x) {
        int user_input_time;
        if (x >= RENT_PER_HOUR) {
            user_input_time = x / MINUTES_IN_AN_HOUR;
            additionalMinutes = x % MINUTES_IN_AN_HOUR;
            total = (user_input_time * RENT_PER_HOUR + additionalMinutes) * ADDITIONAL_HOUR;
        } else {
            user_input_time = x / MINUTES_IN_AN_HOUR;
            additionalMinutes = x % MINUTES_IN_AN_HOUR;
            total = user_input_time * RENT_PER_HOUR + additionalMinutes;
        }

    }

    public void setEquipType(int equipType) {
        int size = typesOfEquips.length;
        for (int x = 0; x < size; x++) {
            if (equipType > 7) {
                typeOutput = typesOfEquips[9];
            } else {
                typeOutput = typesOfEquips[equipType - 1];
            }
        }
        // return typeOutput;
    }

    // CH9 arraylists
    List<Integer> guestAmount = new ArrayList<>();
    List<Integer> eventType = new ArrayList<>();
    List<String> eventNumb = new ArrayList<>();

    public String getPhoneNumber(String x) {
        phoneNumber = x;
        setPhoneNumber(phoneNumber);
        return phoneNumber;
    }

    public static String setPhoneNumber(String x) {
        if (x.length() == 10) {
            x.replaceAll("[^a-zA-Z ]", "");
            phoneNumberFinal = x;
        } else {
            x = "0000000000";
            phoneNumberFinal = x;
        }
        getPhone(phoneNumberFinal);
        return phoneNumberFinal;
    }

    // Format Phone number
    public static String getPhone(String x) {

        if (x.length() >= 10) {
            formattedPhoneNumber = x.replaceAll("(\\d{3})(\\d{3})(\\d+)", "($1) $2-$3");
        }

        return formattedPhoneNumber;
    }

    public void displayDetails(String v) {
        System.out.println("\n");
        System.out.println("Contract Number: " + contractNumber);
        System.out.println("Type of equipment: " + typeOutput);
        System.out.println("Hourly Rate: " + RENT_PER_HOUR);
        System.out.println("Additional minutes: " + additionalMinutes);
        System.out.println("Total: " + total);
        System.out.println("Phone Number: " + formattedPhoneNumber);
        System.out.println("\n");
    }

}
